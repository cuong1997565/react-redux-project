{"ast":null,"code":"import _classCallCheck from \"/var/www/reactjs/react-redux-project/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/var/www/reactjs/react-redux-project/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/var/www/reactjs/react-redux-project/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/var/www/reactjs/react-redux-project/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/var/www/reactjs/react-redux-project/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/var/www/reactjs/react-redux-project/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport TaskList from './components/TaskList';\nimport TaskForm from './components/TaskForm';\nimport TaskControl from './components/TaskControl'; // import _ from 'lodash';\n\nimport { connect } from 'react-redux';\nimport * as actions from './actions/index';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.onToggleForm = function () {\n      var itemEditting = _this.props.itemEditting;\n\n      if (itemEditting && itemEditting.id !== '') {\n        _this.props.onOpenForm();\n      } else {\n        _this.props.onToggleForm();\n      }\n\n      _this.props.onClearTask({\n        id: '',\n        name: '',\n        status: false\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      var isDisplayFrom = this.props.isDisplayFrom;\n      return React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, \"Qu\\u1EA3n L\\xFD C\\xF4ng Vi\\u1EC7c\"), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: isDisplayFrom ? 'col-xs-4 col-sm-4 col-md-4 col-lg-4' : '',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(TaskForm, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: isDisplayFrom ? 'col-xs-8 col-sm-8 col-md-8 col-lg-8' : 'col-xs-12 col-sm-12 col-md-12 col-lg-12',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"button\",\n        className: \"btn btn-primary\",\n        onClick: this.onToggleForm,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"fa fa-plus mr-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }), \"Th\\xEAm C\\xF4ng Vi\\u1EC7c\"), React.createElement(TaskControl, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }), React.createElement(TaskList, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    isDisplayFrom: state.isDisplayForm,\n    itemEditting: state.itemEditting\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch, props) {\n  return {\n    onToggleForm: function onToggleForm() {\n      dispatch(actions.toggleForm());\n    },\n    onClearTask: function onClearTask(task) {\n      dispatch(actions.editTask(task));\n    },\n    onOpenForm: function onOpenForm() {\n      dispatch(actions.openForm());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/var/www/reactjs/react-redux-project/src/App.js"],"names":["React","Component","TaskList","TaskForm","TaskControl","connect","actions","App","onToggleForm","itemEditting","props","id","onOpenForm","onClearTask","name","status","isDisplayFrom","mapStateToProps","state","isDisplayForm","mapDispatchToProps","dispatch","toggleForm","task","editTask","openForm"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport TaskList from './components/TaskList';\nimport TaskForm from './components/TaskForm';\nimport TaskControl from './components/TaskControl';\n// import _ from 'lodash';\nimport { connect } from 'react-redux';\nimport * as actions from './actions/index';\nclass App extends Component {\n    // constructor (props) {\n    //     super(props);\n    //     this.state = {\n    //         sortBy    : 'name',\n    //         sortValue :  1\n    //     }\n    // }\n\n    // componentWillMount(){\n    //     if(localStorage && localStorage.getItem('tasks')){\n    //            var tasks = JSON.parse(localStorage.getItem('tasks'));\n    //            this.setState({\n    //                 tasks: tasks\n    //            });\n    //     }\n    // }\n    // s4(){\n    //     return Math.floor((1* Math.random() ) * 0x10000).toString(16).substring(1);\n    // }\n    // generateID(){\n    //     return this.s4() + this.s4() + '-' + this.s4();\n    // }\n\n\n    // onGenerateData = () => {\n    //     var tasks = [\n    //         {\n    //             id     : this.generateID(),\n    //             name   : 'Hoc lap trinh',\n    //             status : true\n    //         },\n    //         {\n    //             id     : this.generateID(),\n    //             name   : 'Di boi',\n    //             status : false\n    //         },\n    //         {\n    //             id     : this.generateID(),\n    //             name   : 'Ngu',\n    //             status : true\n    //         }\n    //     ];\n\n    //     localStorage.setItem('tasks', JSON.stringify(tasks));\n    // }\n\n    onToggleForm = () => {\n        var { itemEditting } = this.props;\n        if (itemEditting && itemEditting.id !== '') {\n            this.props.onOpenForm();\n        } else {\n            this.props.onToggleForm();\n        }\n        this.props.onClearTask({\n            id : '',\n            name : '',\n            status : false\n        });\n    }\n    render() {\n        var { isDisplayFrom } = this.props;\n        return (\n            <div className=\"container\">\n                <div className=\"text-center\">\n                    <h1>Quản Lý Công Việc</h1><hr/>\n                </div>\n                <div className=\"row\">\n                    <div className={ isDisplayFrom ? 'col-xs-4 col-sm-4 col-md-4 col-lg-4' : '' }>\n                    <TaskForm\n                    />\n                    </div>\n                    <div className= {isDisplayFrom ? 'col-xs-8 col-sm-8 col-md-8 col-lg-8' : 'col-xs-12 col-sm-12 col-md-12 col-lg-12' }>\n                        <button\n                        type=\"button\"\n                        className=\"btn btn-primary\"\n                        onClick={this.onToggleForm} >\n                            <span className=\"fa fa-plus mr-5\"></span>\n                            Thêm Công Việc\n                        </button>\n                        {/* <button\n                        type=\"button\"\n                        className=\"btn btn-danger ml-5\"\n                        onClick={this.onGenerateData}>\n                            <span className=\"fa fa-plus mr-5\"></span>\n                            Generate Data\n                        </button> */}\n\n                        <TaskControl\n                         />\n                        <TaskList\n                        />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        isDisplayFrom : state.isDisplayForm,\n        itemEditting : state.itemEditting\n    };\n}\n\nconst mapDispatchToProps = (dispatch, props) =>{\n    return {\n        onToggleForm : () => {\n            dispatch(actions.toggleForm());\n        },\n        onClearTask : (task) =>{\n            dispatch(actions.editTask(task));\n        },\n        onOpenForm : () => {\n            dispatch(actions.openForm());\n        }\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);"]},"metadata":{},"sourceType":"module"}
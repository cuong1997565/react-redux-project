{"ast":null,"code":"import _objectSpread from \"/var/www/reactjs/react-redux-project/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _toConsumableArray from \"/var/www/reactjs/react-redux-project/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport * as types from './../constants/ActionType';\n\nvar s4 = function s4() {\n  return Math.floor(1 * Math.random() * 0x10000).toString(16).substring(1);\n};\n\nvar randomID = function randomID() {\n  return s4() + s4() + '-' + s4() + '-' + s4() + s4() + '-' + s4();\n}; //find id\n\n\nvar findIndex = function findIndex(tasks, id) {\n  var result = -1;\n  tasks.forEach(function (task, index) {\n    if (task.id === id) {\n      result = index;\n    }\n  });\n  return result;\n};\n\nvar data = JSON.parse(localStorage.getItem('tasks'));\nvar initialState = data ? data : [];\n\nvar myReducer = function myReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  var id = '';\n  var index = -1;\n\n  switch (action.type) {\n    case types.LIST_ALL:\n      return state;\n\n    case types.SAVE_TASK:\n      var task = {\n        id: action.task.id,\n        name: action.task.name,\n        status: action.task.status === true ? true : false\n      };\n\n      if (!task.id) {\n        task.id = findIndex();\n        state.push(task);\n      } else {\n        index = findIndex(state, task.id);\n        state[index] = task;\n      }\n\n      localStorage.setItem('tasks', JSON.stringify(state));\n      return _toConsumableArray(state);\n\n    case types.UPDATE_STATUS_TASK:\n      id = action.id;\n      index = findIndex(state, id); //\n      // state[index].status = ! state[index].status;\n      ////////////\n      // var cloneTask = { ...state[index]};\n      // cloneTask.status = !cloneTask.status;\n      // state[index] = cloneTask;\n      /////////\n\n      state[index] = _objectSpread({}, state[index], {\n        status: !state[index].status\n      });\n      localStorage.setItem('tasks', JSON.stringify(state));\n      return _toConsumableArray(state);\n\n    case types.DELETE_TASK:\n      if (window.confirm(\"ban co chac xoa khong ??\")) {\n        var id = action.id;\n        var index = findIndex(state, id);\n        state.splice(index, 1);\n        localStorage.setItem('tasks', JSON.stringify(state));\n        return _toConsumableArray(state);\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default myReducer;","map":{"version":3,"sources":["/var/www/reactjs/react-redux-project/src/reducers/tasks.js"],"names":["types","s4","Math","floor","random","toString","substring","randomID","findIndex","tasks","id","result","forEach","task","index","data","JSON","parse","localStorage","getItem","initialState","myReducer","state","action","type","LIST_ALL","SAVE_TASK","name","status","push","setItem","stringify","UPDATE_STATUS_TASK","DELETE_TASK","window","confirm","splice"],"mappings":"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","sourcesContent":["import * as types from './../constants/ActionType';\nvar s4 = () => {\n    return Math.floor((1* Math.random() ) * 0x10000).toString(16).substring(1);\n}\n\nvar randomID = () => {\n      return s4() + s4() + '-' + s4() + '-'+ s4() + s4() + '-' + s4();\n}\n\n    //find id\nvar findIndex = (tasks, id) => {\n        var result = -1;\n        tasks.forEach((task, index) => {\n            if(task.id === id){\n                result = index;\n            }\n        });\n        return result;\n    }\n\nvar data = JSON.parse(localStorage.getItem('tasks'));\nvar initialState =  data ? data : [];\nvar myReducer = (state = initialState, action) => {\n    var id = '';\n    var index = -1;\n    switch(action.type) {\n        case types.LIST_ALL :\n            return state;\n        case types.SAVE_TASK :\n            var task = {\n                id     : action.task.id,\n                name   : action.task.name,\n                status : action.task.status === true ? true : false\n              };\n              if(!task.id){\n                task.id = findIndex();\n                state.push(task);\n              } else{\n                  index        = findIndex(state, task.id);\n                  state[index] = task;\n              }\n              localStorage.setItem('tasks', JSON.stringify(state));\n            return [...state];\n        case types.UPDATE_STATUS_TASK:\n            id = action.id;\n            index = findIndex(state, id);\n            //\n            // state[index].status = ! state[index].status;\n            ////////////\n            // var cloneTask = { ...state[index]};\n            // cloneTask.status = !cloneTask.status;\n            // state[index] = cloneTask;\n            /////////\n            state[index] = {\n                ...state[index],\n                status : !state[index].status\n            };\n            localStorage.setItem('tasks', JSON.stringify(state));\n            return [...state];\n        case types.DELETE_TASK:\n            if(window.confirm(\"ban co chac xoa khong ??\")){\n                var id = action.id;\n                var index = findIndex(state, id);\n                state.splice(index, 1);\n                localStorage.setItem('tasks',JSON.stringify(state));\n                return [...state];\n            }\n        default:\n            return state;\n    }\n}\n\nexport default myReducer;"]},"metadata":{},"sourceType":"module"}
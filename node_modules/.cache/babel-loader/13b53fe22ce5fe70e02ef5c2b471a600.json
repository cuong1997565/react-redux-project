{"ast":null,"code":"import _classCallCheck from \"/var/www/reactjs/react/react/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/var/www/reactjs/react/react/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/var/www/reactjs/react/react/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/var/www/reactjs/react/react/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/var/www/reactjs/react/react/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/var/www/reactjs/react/react/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport TaskList from './components/TaskList';\nimport TaskForm from './components/TaskForm';\nimport TaskControl from './components/TaskControl';\nimport _ from 'lodash';\nimport { connect } from 'react-redux';\nimport * as actions from './actions/index';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n\n    _this.onGenerateData = function () {\n      var tasks = [{\n        id: _this.generateID(),\n        name: 'Hoc lap trinh',\n        status: true\n      }, {\n        id: _this.generateID(),\n        name: 'Di boi',\n        status: false\n      }, {\n        id: _this.generateID(),\n        name: 'Ngu',\n        status: true\n      }];\n      localStorage.setItem('tasks', JSON.stringify(tasks));\n    };\n\n    _this.onToggleForm = function () {\n      _this.props.onToggleForm();\n    };\n\n    _this.onShowForm = function () {\n      _this.setState({\n        isDisplayFrom: true\n      });\n    };\n\n    _this.onUpdateStatus = function (id) {\n      var tasks = _this.state.tasks;\n\n      var index = _.findIndex(tasks, function (task) {\n        return task.id === id;\n      });\n\n      tasks[index].status = !tasks[index].status;\n\n      _this.setState({\n        tasks: tasks\n      });\n\n      localStorage.setItem('tasks', JSON.stringify(tasks));\n    };\n\n    _this.onDelete = function (id) {\n      var index = _this.findIndex(id);\n\n      var tasks = _this.state.tasks;\n\n      if (index !== -1) {\n        tasks.splice(index, 1);\n\n        _this.setState({\n          tasks: tasks\n        });\n\n        localStorage.setItem('tasks', JSON.stringify(tasks));\n      }\n    };\n\n    _this.onUpdate = function (id) {\n      var tasks = _this.state.tasks;\n\n      var index = _this.findIndex(id);\n\n      var taskEditting = tasks[index];\n\n      _this.setState({\n        taskEditting: taskEditting\n      });\n\n      _this.onShowForm();\n    };\n\n    _this.onFilter = function (filterName, filterStatus) {\n      filterStatus = parseInt(filterStatus, 10);\n\n      _this.setState({\n        filter: {\n          name: filterName.toLowerCase(),\n          status: filterStatus\n        }\n      });\n    };\n\n    _this.onSreach = function (keyword) {\n      _this.setState({\n        keyword: keyword\n      });\n    };\n\n    _this.onSort = function (sortBy, sortValue) {\n      _this.setState({\n        sortBy: sortBy,\n        sortValue: sortValue\n      });\n    };\n\n    _this.findIndex = function (id) {\n      var tasks = _this.state.tasks;\n      var result = -1;\n      tasks.forEach(function (task, index) {\n        if (task.id === id) {\n          result = index;\n        }\n      });\n      return result;\n    };\n\n    _this.state = {\n      taskEditting: null,\n      filter: {\n        name: '',\n        status: -1\n      },\n      keyword: '',\n      sortBy: 'name',\n      sortValue: 1\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          taskEditting = _this$state.taskEditting,\n          filter = _this$state.filter,\n          keyword = _this$state.keyword,\n          sortBy = _this$state.sortBy,\n          sortValue = _this$state.sortValue; //var tasks = this.state.tasks\n\n      var isDisplayFrom = this.props.isDisplayFrom;\n\n      if (filter) {\n        if (filter.name) {}\n      }\n\n      if (keyword) {// tasks = tasks.filter((task) => {\n        //     return task.name.toLowerCase().indexOf(keyword) !== -1;\n        // });\n      }\n\n      if (sortBy === 'name') {} else {}\n\n      var elementTaskForm = isDisplayFrom ? React.createElement(TaskForm, {\n        task: taskEditting,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }) : '';\n      return React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, \"Qu\\u1EA3n L\\xFD C\\xF4ng Vi\\u1EC7c\"), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: isDisplayFrom ? 'col-xs-4 col-sm-4 col-md-4 col-lg-4' : '',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, elementTaskForm), React.createElement(\"div\", {\n        className: isDisplayFrom ? 'col-xs-8 col-sm-8 col-md-8 col-lg-8' : 'col-xs-12 col-sm-12 col-md-12 col-lg-12',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"button\",\n        className: \"btn btn-primary\",\n        onClick: this.onToggleForm,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"fa fa-plus mr-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }), \"Th\\xEAm C\\xF4ng Vi\\u1EC7c\"), React.createElement(\"button\", {\n        type: \"button\",\n        className: \"btn btn-danger ml-5\",\n        onClick: this.onGenerateData,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"fa fa-plus mr-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }), \"Generate Data\"), React.createElement(TaskControl, {\n        onSreach: this.onSreach,\n        onSort: this.onSort,\n        sortBy: sortBy,\n        sortValue: sortValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }), React.createElement(TaskList, {\n        onUpdateStatus: this.onUpdateStatus,\n        onDelete: this.onDelete,\n        onUpdate: this.onUpdate,\n        onFilter: this.onFilter,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    isDisplayFrom: state.isDisplayForm\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch, props) {\n  return {\n    onToggleForm: function onToggleForm() {\n      dispatch(actions.toggleForm());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/var/www/reactjs/react/react/src/App.js"],"names":["React","Component","TaskList","TaskForm","TaskControl","_","connect","actions","App","props","onGenerateData","tasks","id","generateID","name","status","localStorage","setItem","JSON","stringify","onToggleForm","onShowForm","setState","isDisplayFrom","onUpdateStatus","state","index","findIndex","task","onDelete","splice","onUpdate","taskEditting","onFilter","filterName","filterStatus","parseInt","filter","toLowerCase","onSreach","keyword","onSort","sortBy","sortValue","result","forEach","elementTaskForm","mapStateToProps","isDisplayForm","mapDispatchToProps","dispatch","toggleForm"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport TaskList from './components/TaskList';\nimport TaskForm from './components/TaskForm';\nimport TaskControl from './components/TaskControl';\nimport _ from 'lodash';\nimport { connect } from 'react-redux';\nimport * as actions from './actions/index';\nclass App extends Component {\n    constructor (props) {\n        super(props);\n        this.state = {\n            taskEditting  : null,\n            filter        : {\n                name   : '',\n                status : -1\n            },\n            keyword   : '',\n            sortBy    : 'name',\n            sortValue :  1\n        }\n    }\n\n    onGenerateData = () => {\n        var tasks = [\n            {\n                id     : this.generateID(),\n                name   : 'Hoc lap trinh',\n                status : true\n            },\n            {\n                id     : this.generateID(),\n                name   : 'Di boi',\n                status : false\n            },\n            {\n                id     : this.generateID(),\n                name   : 'Ngu',\n                status : true\n            }\n        ];\n\n        localStorage.setItem('tasks', JSON.stringify(tasks));\n\n    }\n\n    onToggleForm = () => {\n        this.props.onToggleForm();\n    }\n\n    onShowForm = () => {\n        this.setState({\n            isDisplayFrom: true\n        })\n    }\n    //update status\n    onUpdateStatus = (id) => {\n        var { tasks } = this.state;\n        var index = _.findIndex(tasks, (task) => {\n            return task.id === id;\n        });\n              tasks[index].status = !tasks[index].status;\n              this.setState({\n                 tasks: tasks\n              })\n              localStorage.setItem('tasks', JSON.stringify(tasks));\n    }\n    //delete\n    onDelete = (id) => {\n        var index = this.findIndex(id);\n        var { tasks } = this.state;\n        if(index !== -1){\n            tasks.splice(index,1);\n            this.setState({\n                  tasks: tasks\n            })\n            localStorage.setItem('tasks', JSON.stringify(tasks));\n        }\n    }\n\n    //update\n    onUpdate = (id) => {\n        var { tasks } = this.state;\n        var index = this.findIndex(id);\n        var taskEditting = tasks[index];\n        this.setState({\n             taskEditting: taskEditting\n        });\n        this.onShowForm();\n    }\n    //filter\n    onFilter = (filterName , filterStatus) => {\n        filterStatus = parseInt(filterStatus,10);\n\n        this.setState({\n            filter : {\n                name    : filterName.toLowerCase(),\n                status  : filterStatus\n            }\n        });\n    }\n    //sreach\n    onSreach = (keyword) => {\n        this.setState({\n            keyword :keyword\n        });\n    }\n\n    onSort = (sortBy, sortValue) => {\n            this.setState({\n               sortBy: sortBy,\n               sortValue: sortValue\n            });\n    }\n\n    //find id\n    findIndex = (id) => {\n        var {tasks} = this.state;\n        var result = -1;\n        tasks.forEach((task, index) => {\n            if(task.id === id){\n                result = index;\n            }\n        });\n        return result;\n    }\n\n    render() {\n        var {\n        taskEditting,\n        filter,\n        keyword,\n        sortBy,\n        sortValue } = this.state; //var tasks = this.state.tasks\n        var { isDisplayFrom } = this.props;\n        if(filter){\n            if(filter.name){\n                  \n\n            }\n        }\n\n        if(keyword){\n            // tasks = tasks.filter((task) => {\n            //     return task.name.toLowerCase().indexOf(keyword) !== -1;\n            // });\n         \n        }\n\n        if (sortBy === 'name'){\n         \n        } else{\n           \n        }\n\n        var elementTaskForm = isDisplayFrom ? <TaskForm\n                task = { taskEditting } /> : '';\n        return (\n            <div className=\"container\">\n                <div className=\"text-center\">\n                    <h1>Quản Lý Công Việc</h1><hr/>\n                </div>\n                <div className=\"row\">\n                    <div className={ isDisplayFrom ? 'col-xs-4 col-sm-4 col-md-4 col-lg-4' : '' }>\n                        {elementTaskForm}\n                    </div>\n                    <div className= {isDisplayFrom ? 'col-xs-8 col-sm-8 col-md-8 col-lg-8' : 'col-xs-12 col-sm-12 col-md-12 col-lg-12' }>\n                        <button\n                        type=\"button\"\n                        className=\"btn btn-primary\"\n                        onClick={this.onToggleForm} >\n                            <span className=\"fa fa-plus mr-5\"></span>\n                            Thêm Công Việc\n                        </button>\n                        <button\n                        type=\"button\"\n                        className=\"btn btn-danger ml-5\"\n                        onClick={this.onGenerateData}>\n                            <span className=\"fa fa-plus mr-5\"></span>\n                            Generate Data\n                        </button>\n\n                        <TaskControl\n                        onSreach   = {this.onSreach}\n                        onSort     = {this.onSort}\n                        sortBy     = {sortBy}\n                        sortValue  = {sortValue}\n                         />\n\n\n                        <TaskList\n                        onUpdateStatus = { this.onUpdateStatus }\n                        onDelete = { this.onDelete }\n                        onUpdate = { this.onUpdate }\n                        onFilter = { this.onFilter } />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        isDisplayFrom : state.isDisplayForm,\n    };\n}\n\nconst mapDispatchToProps = (dispatch, props) =>{\n    return {\n        onToggleForm : () => {\n            dispatch(actions.toggleForm());\n        }\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _this = this;\n\nimport * as types from './../constants/ActionType';\n\ns4 = function s4() {\n  return Math.floor(1 * Math.random() * 0x10000).toString(16).substring(1);\n};\n\ngenerateID = function generateID() {\n  return _this.s4() + _this.s4() + '-' + _this.s4() + '-' + _this.s4() + _this.s4() + '-' + _this.s4();\n};\n\nvar data = JSON.parse(localStorage.getItem('tasks'));\nvar initialState = data ? data : [];\n\nvar myReducer = function myReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case types.LIST_ALL:\n      return state;\n\n    case types.ADD_TASK:\n      console.log(action);\n      return state;\n\n    default:\n      return state;\n  }\n};\n\nexport default myReducer;","map":{"version":3,"sources":["/var/www/reactjs/react-redux-project/src/reducers/tasks.js"],"names":["types","s4","Math","floor","random","toString","substring","generateID","data","JSON","parse","localStorage","getItem","initialState","myReducer","state","action","type","LIST_ALL","ADD_TASK","console","log"],"mappings":";;AAAA,OAAO,KAAKA,KAAZ,MAAuB,2BAAvB;;AACAC,EAAE,GAAG,cAAM;AACP,SAAOC,IAAI,CAACC,KAAL,CAAY,IAAGD,IAAI,CAACE,MAAL,EAAJ,GAAsB,OAAjC,EAA0CC,QAA1C,CAAmD,EAAnD,EAAuDC,SAAvD,CAAiE,CAAjE,CAAP;AACH,CAFD;;AAIAC,UAAU,GAAG,sBAAM;AACb,SAAO,KAAI,CAACN,EAAL,KAAY,KAAI,CAACA,EAAL,EAAZ,GAAwB,GAAxB,GAA8B,KAAI,CAACA,EAAL,EAA9B,GAA0C,GAA1C,GAA+C,KAAI,CAACA,EAAL,EAA/C,GAA2D,KAAI,CAACA,EAAL,EAA3D,GAAuE,GAAvE,GAA6E,KAAI,CAACA,EAAL,EAApF;AACL,CAFD;;AAGA,IAAIO,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAX,CAAX;AACA,IAAIC,YAAY,GAAIL,IAAI,GAAGA,IAAH,GAAU,EAAlC;;AACA,IAAIM,SAAS,GAAG,SAAZA,SAAY,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBF,YAAyB;AAAA,MAAXG,MAAW;;AAC9C,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKjB,KAAK,CAACkB,QAAX;AACI,aAAOH,KAAP;;AACJ,SAAKf,KAAK,CAACmB,QAAX;AACIC,MAAAA,OAAO,CAACC,GAAR,CAAYL,MAAZ;AACA,aAAOD,KAAP;;AACJ;AACI,aAAOA,KAAP;AAPR;AASH,CAVD;;AAYA,eAAeD,SAAf","sourcesContent":["import * as types from './../constants/ActionType';\ns4 = () => {\n    return Math.floor((1* Math.random() ) * 0x10000).toString(16).substring(1);\n}\n\ngenerateID = () => {\n      return this.s4() + this.s4() + '-' + this.s4() + '-'+ this.s4() + this.s4() + '-' + this.s4();\n}\nvar data = JSON.parse(localStorage.getItem('tasks'));\nvar initialState =  data ? data : [];\nvar myReducer = (state = initialState, action) => {\n    switch(action.type) {\n        case types.LIST_ALL :\n            return state;\n        case types.ADD_TASK :\n            console.log(action);\n            return state; \n        default:\n            return state;\n    }\n}\n\nexport default myReducer;"]},"metadata":{},"sourceType":"module"}
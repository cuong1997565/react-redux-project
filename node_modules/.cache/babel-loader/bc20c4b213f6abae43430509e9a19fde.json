{"ast":null,"code":"import _classCallCheck from \"/var/www/reactjs/react-redux-project/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/var/www/reactjs/react-redux-project/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/var/www/reactjs/react-redux-project/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/var/www/reactjs/react-redux-project/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/var/www/reactjs/react-redux-project/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/var/www/reactjs/react-redux-project/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport TaskList from './components/TaskList';\nimport TaskForm from './components/TaskForm';\nimport TaskControl from './components/TaskControl'; // import _ from 'lodash';\n\nimport { connect } from 'react-redux';\nimport * as actions from './actions/index';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n\n    _this.onGenerateData = function () {\n      var tasks = [{\n        id: _this.generateID(),\n        name: 'Hoc lap trinh',\n        status: true\n      }, {\n        id: _this.generateID(),\n        name: 'Di boi',\n        status: false\n      }, {\n        id: _this.generateID(),\n        name: 'Ngu',\n        status: true\n      }];\n      localStorage.setItem('tasks', JSON.stringify(tasks));\n    };\n\n    _this.onToggleForm = function () {\n      var itemEditing = _this.props.itemEditing; // console.log(\"data response :\"+ itemEditing);\n\n      console.log(itemEditing.id);\n\n      if (itemEditing && itemEditing.id !== undefined) {\n        console.log(\"add\");\n\n        _this.props.onOpenForm();\n      } else {\n        console.log(\"edit\");\n\n        _this.props.onToggleForm();\n      }\n\n      _this.props.onClearTask({\n        id: '',\n        name: '',\n        status: false\n      });\n    };\n\n    _this.onShowForm = function () {\n      _this.setState({\n        isDisplayFrom: true\n      });\n    };\n\n    _this.onFilter = function (filterName, filterStatus) {\n      filterStatus = parseInt(filterStatus, 10);\n\n      _this.setState({\n        filter: {\n          name: filterName.toLowerCase(),\n          status: filterStatus\n        }\n      });\n    };\n\n    _this.onSreach = function (keyword) {\n      _this.setState({\n        keyword: keyword\n      });\n    };\n\n    _this.onSort = function (sortBy, sortValue) {\n      _this.setState({\n        sortBy: sortBy,\n        sortValue: sortValue\n      });\n    };\n\n    _this.findIndex = function (id) {\n      var tasks = _this.state.tasks;\n      var result = -1;\n      tasks.forEach(function (task, index) {\n        if (task.id === id) {\n          result = index;\n        }\n      });\n      return result;\n    };\n\n    _this.state = {\n      filter: {\n        name: '',\n        status: -1\n      },\n      keyword: '',\n      sortBy: 'name',\n      sortValue: 1\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          filter = _this$state.filter,\n          keyword = _this$state.keyword,\n          sortBy = _this$state.sortBy,\n          sortValue = _this$state.sortValue; //var tasks = this.state.tasks\n\n      var isDisplayFrom = this.props.isDisplayFrom;\n\n      if (filter) {\n        if (filter.name) {}\n      }\n\n      if (keyword) {// tasks = tasks.filter((task) => {\n        //     return task.name.toLowerCase().indexOf(keyword) !== -1;\n        // });\n      }\n\n      if (sortBy === 'name') {} else {}\n\n      return React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, \"Qu\\u1EA3n L\\xFD C\\xF4ng Vi\\u1EC7c\"), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: isDisplayFrom ? 'col-xs-4 col-sm-4 col-md-4 col-lg-4' : '',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, React.createElement(TaskForm, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: isDisplayFrom ? 'col-xs-8 col-sm-8 col-md-8 col-lg-8' : 'col-xs-12 col-sm-12 col-md-12 col-lg-12',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"button\",\n        className: \"btn btn-primary\",\n        onClick: this.onToggleForm,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"fa fa-plus mr-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }), \"Th\\xEAm C\\xF4ng Vi\\u1EC7c\"), React.createElement(\"button\", {\n        type: \"button\",\n        className: \"btn btn-danger ml-5\",\n        onClick: this.onGenerateData,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"fa fa-plus mr-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }), \"Generate Data\"), React.createElement(TaskControl, {\n        onSreach: this.onSreach,\n        onSort: this.onSort,\n        sortBy: sortBy,\n        sortValue: sortValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }), React.createElement(TaskList // onUpdate = { this.onUpdate }\n      , {\n        onFilter: this.onFilter,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    isDisplayFrom: state.isDisplayForm,\n    itemEditing: state.itemEditing\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch, props) {\n  return {\n    onToggleForm: function onToggleForm() {\n      dispatch(actions.toggleForm());\n    },\n    onClearTask: function onClearTask(task) {\n      dispatch(actions.editTask(task));\n    },\n    onOpenForm: function onOpenForm() {\n      dispatch(actions.openForm());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/var/www/reactjs/react-redux-project/src/App.js"],"names":["React","Component","TaskList","TaskForm","TaskControl","connect","actions","App","props","onGenerateData","tasks","id","generateID","name","status","localStorage","setItem","JSON","stringify","onToggleForm","itemEditing","console","log","undefined","onOpenForm","onClearTask","onShowForm","setState","isDisplayFrom","onFilter","filterName","filterStatus","parseInt","filter","toLowerCase","onSreach","keyword","onSort","sortBy","sortValue","findIndex","state","result","forEach","task","index","mapStateToProps","isDisplayForm","mapDispatchToProps","dispatch","toggleForm","editTask","openForm"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport TaskList from './components/TaskList';\nimport TaskForm from './components/TaskForm';\nimport TaskControl from './components/TaskControl';\n// import _ from 'lodash';\nimport { connect } from 'react-redux';\nimport * as actions from './actions/index';\nclass App extends Component {\n    constructor (props) {\n        super(props);\n        this.state = {\n            filter        : {\n                name   : '',\n                status : -1\n            },\n            keyword   : '',\n            sortBy    : 'name',\n            sortValue :  1\n        }\n    }\n\n    onGenerateData = () => {\n        var tasks = [\n            {\n                id     : this.generateID(),\n                name   : 'Hoc lap trinh',\n                status : true\n            },\n            {\n                id     : this.generateID(),\n                name   : 'Di boi',\n                status : false\n            },\n            {\n                id     : this.generateID(),\n                name   : 'Ngu',\n                status : true\n            }\n        ];\n\n        localStorage.setItem('tasks', JSON.stringify(tasks));\n\n    }\n\n    onToggleForm = () => {\n        var { itemEditing } = this.props;\n        // console.log(\"data response :\"+ itemEditing);\n        console.log(itemEditing.id);\n        if (itemEditing && itemEditing.id !== undefined) {\n            console.log(\"add\");\n            this.props.onOpenForm();\n        } else {\n            console.log(\"edit\");\n            this.props.onToggleForm();\n        }\n        this.props.onClearTask({\n            id : '',\n            name : '',\n            status : false\n        });\n    }\n\n    onShowForm = () => {\n        this.setState({\n            isDisplayFrom: true\n        })\n    }\n\n    //filter\n    onFilter = (filterName , filterStatus) => {\n        filterStatus = parseInt(filterStatus,10);\n\n        this.setState({\n            filter : {\n                name    : filterName.toLowerCase(),\n                status  : filterStatus\n            }\n        });\n    }\n    //sreach\n    onSreach = (keyword) => {\n        this.setState({\n            keyword :keyword\n        });\n    }\n\n    onSort = (sortBy, sortValue) => {\n            this.setState({\n               sortBy: sortBy,\n               sortValue: sortValue\n            });\n    }\n\n    //find id\n    findIndex = (id) => {\n        var {tasks} = this.state;\n        var result = -1;\n        tasks.forEach((task, index) => {\n            if(task.id === id){\n                result = index;\n            }\n        });\n        return result;\n    }\n\n    render() {\n        var {\n        filter,\n        keyword,\n        sortBy,\n        sortValue } = this.state; //var tasks = this.state.tasks\n        var { isDisplayFrom } = this.props;\n        if(filter){\n            if(filter.name){\n                  \n\n            }\n        }\n\n        if(keyword){\n            // tasks = tasks.filter((task) => {\n            //     return task.name.toLowerCase().indexOf(keyword) !== -1;\n            // });\n         \n        }\n\n        if (sortBy === 'name'){\n         \n        } else{\n           \n        }\n        return (\n            <div className=\"container\">\n                <div className=\"text-center\">\n                    <h1>Quản Lý Công Việc</h1><hr/>\n                </div>\n                <div className=\"row\">\n                    <div className={ isDisplayFrom ? 'col-xs-4 col-sm-4 col-md-4 col-lg-4' : '' }>\n                    <TaskForm\n                    />\n                    </div>\n                    <div className= {isDisplayFrom ? 'col-xs-8 col-sm-8 col-md-8 col-lg-8' : 'col-xs-12 col-sm-12 col-md-12 col-lg-12' }>\n                        <button\n                        type=\"button\"\n                        className=\"btn btn-primary\"\n                        onClick={this.onToggleForm} >\n                            <span className=\"fa fa-plus mr-5\"></span>\n                            Thêm Công Việc\n                        </button>\n                        <button\n                        type=\"button\"\n                        className=\"btn btn-danger ml-5\"\n                        onClick={this.onGenerateData}>\n                            <span className=\"fa fa-plus mr-5\"></span>\n                            Generate Data\n                        </button>\n\n                        <TaskControl\n                        onSreach   = {this.onSreach}\n                        onSort     = {this.onSort}\n                        sortBy     = {sortBy}\n                        sortValue  = {sortValue}\n                         />\n\n\n                        <TaskList\n                        // onUpdate = { this.onUpdate }\n                        onFilter = { this.onFilter } />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        isDisplayFrom : state.isDisplayForm,\n        itemEditing : state.itemEditing\n    };\n}\n\nconst mapDispatchToProps = (dispatch, props) =>{\n    return {\n        onToggleForm : () => {\n            dispatch(actions.toggleForm());\n        },\n        onClearTask : (task) =>{\n            dispatch(actions.editTask(task));\n        },\n        onOpenForm : () => {\n            dispatch(actions.openForm());\n        }\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);"]},"metadata":{},"sourceType":"module"}
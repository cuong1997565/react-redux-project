{"ast":null,"code":"import _toConsumableArray from \"/var/www/reactjs/react/react/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport * as types from './../constants/ActionType';\n\nvar s4 = function s4() {\n  return Math.floor(1 * Math.random() * 0x10000).toString(16).substring(1);\n};\n\nvar randomID = function randomID() {\n  return s4() + s4() + '-' + s4() + '-' + s4() + s4() + '-' + s4();\n};\n\nvar data = JSON.parse(localStorage.getItem('tasks'));\nvar initialState = data ? data : [];\n\nvar myReducer = function myReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case types.LIST_ALL:\n      return state;\n\n    case types.ADD_TASK:\n      var newTask = {\n        id: randomID(),\n        name: action.task.name,\n        status: action.task.status === 'true' ? true : false\n      };\n      console.log(newTask);\n      state.push(newTask);\n      console.log(\"state :\" + JSON.stringify(state));\n      localStorage.setItem('tasks', JSON.stringify(state));\n      return _toConsumableArray(state);\n\n    default:\n      return state;\n  }\n};\n\nexport default myReducer;","map":{"version":3,"sources":["/var/www/reactjs/react/react/src/reducers/tasks.js"],"names":["types","s4","Math","floor","random","toString","substring","randomID","data","JSON","parse","localStorage","getItem","initialState","myReducer","state","action","type","LIST_ALL","ADD_TASK","newTask","id","name","task","status","console","log","push","stringify","setItem"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,2BAAvB;;AACA,IAAIC,EAAE,GAAG,SAALA,EAAK,GAAM;AACX,SAAOC,IAAI,CAACC,KAAL,CAAY,IAAGD,IAAI,CAACE,MAAL,EAAJ,GAAsB,OAAjC,EAA0CC,QAA1C,CAAmD,EAAnD,EAAuDC,SAAvD,CAAiE,CAAjE,CAAP;AACH,CAFD;;AAIA,IAAIC,QAAQ,GAAG,SAAXA,QAAW,GAAM;AACf,SAAON,EAAE,KAAKA,EAAE,EAAT,GAAc,GAAd,GAAoBA,EAAE,EAAtB,GAA2B,GAA3B,GAAgCA,EAAE,EAAlC,GAAuCA,EAAE,EAAzC,GAA8C,GAA9C,GAAoDA,EAAE,EAA7D;AACL,CAFD;;AAGA,IAAIO,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAX,CAAX;AACA,IAAIC,YAAY,GAAIL,IAAI,GAAGA,IAAH,GAAU,EAAlC;;AACA,IAAIM,SAAS,GAAG,SAAZA,SAAY,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBF,YAAyB;AAAA,MAAXG,MAAW;;AAC9C,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKjB,KAAK,CAACkB,QAAX;AACI,aAAOH,KAAP;;AACJ,SAAKf,KAAK,CAACmB,QAAX;AACI,UAAIC,OAAO,GAAG;AACVC,QAAAA,EAAE,EAAMd,QAAQ,EADN;AAEVe,QAAAA,IAAI,EAAIN,MAAM,CAACO,IAAP,CAAYD,IAFV;AAGVE,QAAAA,MAAM,EAAGR,MAAM,CAACO,IAAP,CAAYC,MAAZ,KAAuB,MAAvB,GAAgC,IAAhC,GAAuC;AAHtC,OAAd;AAKAC,MAAAA,OAAO,CAACC,GAAR,CAAYN,OAAZ;AACAL,MAAAA,KAAK,CAACY,IAAN,CAAWP,OAAX;AACAK,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAWjB,IAAI,CAACmB,SAAL,CAAeb,KAAf,CAAvB;AACAJ,MAAAA,YAAY,CAACkB,OAAb,CAAqB,OAArB,EAA8BpB,IAAI,CAACmB,SAAL,CAAeb,KAAf,CAA9B;AACA,gCAAYA,KAAZ;;AACJ;AACI,aAAOA,KAAP;AAfR;AAiBH,CAlBD;;AAoBA,eAAeD,SAAf","sourcesContent":["import * as types from './../constants/ActionType';\nvar s4 = () => {\n    return Math.floor((1* Math.random() ) * 0x10000).toString(16).substring(1);\n}\n\nvar randomID = () => {\n      return s4() + s4() + '-' + s4() + '-'+ s4() + s4() + '-' + s4();\n}\nvar data = JSON.parse(localStorage.getItem('tasks'));\nvar initialState =  data ? data : [];\nvar myReducer = (state = initialState, action) => {\n    switch(action.type) {\n        case types.LIST_ALL :\n            return state;\n        case types.ADD_TASK :\n            var newTask = {\n                id    : randomID(),\n                name  : action.task.name,\n                status : action.task.status === 'true' ? true : false\n            }\n            console.log(newTask);\n            state.push(newTask);\n            console.log(\"state :\"+ JSON.stringify(state));\n            localStorage.setItem('tasks', JSON.stringify(state));\n            return  [...state] ;\n        default:\n            return state;\n    }\n}\n\nexport default myReducer;"]},"metadata":{},"sourceType":"module"}
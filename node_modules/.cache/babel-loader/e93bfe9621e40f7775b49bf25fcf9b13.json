{"ast":null,"code":"import _classCallCheck from \"/var/www/reactjs/react-redux-project/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/var/www/reactjs/react-redux-project/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/var/www/reactjs/react-redux-project/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/var/www/reactjs/react-redux-project/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/var/www/reactjs/react-redux-project/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/var/www/reactjs/react-redux-project/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport TaskList from './components/TaskList';\nimport TaskForm from './components/TaskForm';\nimport TaskControl from './components/TaskControl'; // import _ from 'lodash';\n\nimport { connect } from 'react-redux';\nimport * as actions from './actions/index';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n\n    _this.onGenerateData = function () {\n      var tasks = [{\n        id: _this.generateID(),\n        name: 'Hoc lap trinh',\n        status: true\n      }, {\n        id: _this.generateID(),\n        name: 'Di boi',\n        status: false\n      }, {\n        id: _this.generateID(),\n        name: 'Ngu',\n        status: true\n      }];\n      localStorage.setItem('tasks', JSON.stringify(tasks));\n    };\n\n    _this.onToggleForm = function () {\n      var itemEditting = _this.props.itemEditting; // console.log(\"data response :\"+ itemEditing);\n\n      console.log(itemEditting.id);\n\n      if (itemEditting && itemEditting.id !== '') {\n        _this.props.onOpenForm();\n      } else {\n        _this.props.onToggleForm();\n      }\n\n      _this.props.onClearTask({\n        id: '',\n        name: '',\n        status: false\n      });\n    };\n\n    _this.onFilter = function (filterName, filterStatus) {\n      filterStatus = parseInt(filterStatus, 10);\n\n      _this.setState({\n        filter: {\n          name: filterName.toLowerCase(),\n          status: filterStatus\n        }\n      });\n    };\n\n    _this.onSreach = function (keyword) {\n      _this.setState({\n        keyword: keyword\n      });\n    };\n\n    _this.onSort = function (sortBy, sortValue) {\n      _this.setState({\n        sortBy: sortBy,\n        sortValue: sortValue\n      });\n    };\n\n    _this.state = {\n      keyword: '',\n      sortBy: 'name',\n      sortValue: 1\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          filter = _this$state.filter,\n          keyword = _this$state.keyword,\n          sortBy = _this$state.sortBy,\n          sortValue = _this$state.sortValue; //var tasks = this.state.tasks\n\n      var isDisplayFrom = this.props.isDisplayFrom;\n\n      if (filter) {\n        if (filter.name) {}\n      }\n\n      if (keyword) {// tasks = tasks.filter((task) => {\n        //     return task.name.toLowerCase().indexOf(keyword) !== -1;\n        // });\n      }\n\n      if (sortBy === 'name') {} else {}\n\n      return React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, \"Qu\\u1EA3n L\\xFD C\\xF4ng Vi\\u1EC7c\"), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: isDisplayFrom ? 'col-xs-4 col-sm-4 col-md-4 col-lg-4' : '',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, React.createElement(TaskForm, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: isDisplayFrom ? 'col-xs-8 col-sm-8 col-md-8 col-lg-8' : 'col-xs-12 col-sm-12 col-md-12 col-lg-12',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"button\",\n        className: \"btn btn-primary\",\n        onClick: this.onToggleForm,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"fa fa-plus mr-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }), \"Th\\xEAm C\\xF4ng Vi\\u1EC7c\"), React.createElement(\"button\", {\n        type: \"button\",\n        className: \"btn btn-danger ml-5\",\n        onClick: this.onGenerateData,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"fa fa-plus mr-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }), \"Generate Data\"), React.createElement(TaskControl, {\n        onSreach: this.onSreach,\n        onSort: this.onSort,\n        sortBy: sortBy,\n        sortValue: sortValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }), React.createElement(TaskList // onUpdate = { this.onUpdate }\n      , {\n        onFilter: this.onFilter,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    isDisplayFrom: state.isDisplayForm,\n    itemEditting: state.itemEditting\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch, props) {\n  return {\n    onToggleForm: function onToggleForm() {\n      dispatch(actions.toggleForm());\n    },\n    onClearTask: function onClearTask(task) {\n      dispatch(actions.editTask(task));\n    },\n    onOpenForm: function onOpenForm() {\n      dispatch(actions.openForm());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/var/www/reactjs/react-redux-project/src/App.js"],"names":["React","Component","TaskList","TaskForm","TaskControl","connect","actions","App","props","onGenerateData","tasks","id","generateID","name","status","localStorage","setItem","JSON","stringify","onToggleForm","itemEditting","console","log","onOpenForm","onClearTask","onFilter","filterName","filterStatus","parseInt","setState","filter","toLowerCase","onSreach","keyword","onSort","sortBy","sortValue","state","isDisplayFrom","mapStateToProps","isDisplayForm","mapDispatchToProps","dispatch","toggleForm","task","editTask","openForm"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport TaskList from './components/TaskList';\nimport TaskForm from './components/TaskForm';\nimport TaskControl from './components/TaskControl';\n// import _ from 'lodash';\nimport { connect } from 'react-redux';\nimport * as actions from './actions/index';\nclass App extends Component {\n    constructor (props) {\n        super(props);\n        this.state = {\n            keyword   : '',\n            sortBy    : 'name',\n            sortValue :  1\n        }\n    }\n\n    onGenerateData = () => {\n        var tasks = [\n            {\n                id     : this.generateID(),\n                name   : 'Hoc lap trinh',\n                status : true\n            },\n            {\n                id     : this.generateID(),\n                name   : 'Di boi',\n                status : false\n            },\n            {\n                id     : this.generateID(),\n                name   : 'Ngu',\n                status : true\n            }\n        ];\n\n        localStorage.setItem('tasks', JSON.stringify(tasks));\n    }\n\n    onToggleForm = () => {\n        var { itemEditting } = this.props;\n        // console.log(\"data response :\"+ itemEditing);\n        console.log(itemEditting.id);\n        if (itemEditting && itemEditting.id !== '') {\n            this.props.onOpenForm();\n        } else {\n            this.props.onToggleForm();\n        }\n        this.props.onClearTask({\n            id : '',\n            name : '',\n            status : false\n        });\n    }\n    //filter\n    onFilter = (filterName , filterStatus) => {\n        filterStatus = parseInt(filterStatus,10);\n\n        this.setState({\n            filter : {\n                name    : filterName.toLowerCase(),\n                status  : filterStatus\n            }\n        });\n    }\n    //sreach\n    onSreach = (keyword) => {\n        this.setState({\n            keyword :keyword\n        });\n    }\n\n    onSort = (sortBy, sortValue) => {\n            this.setState({\n               sortBy: sortBy,\n               sortValue: sortValue\n            });\n    }\n\n    render() {\n        var {\n        filter,\n        keyword,\n        sortBy,\n        sortValue } = this.state; //var tasks = this.state.tasks\n        var { isDisplayFrom } = this.props;\n        if(filter){\n            if(filter.name){\n                  \n\n            }\n        }\n\n        if(keyword){\n            // tasks = tasks.filter((task) => {\n            //     return task.name.toLowerCase().indexOf(keyword) !== -1;\n            // });\n         \n        }\n\n        if (sortBy === 'name'){\n         \n        } else{\n           \n        }\n        return (\n            <div className=\"container\">\n                <div className=\"text-center\">\n                    <h1>Quản Lý Công Việc</h1><hr/>\n                </div>\n                <div className=\"row\">\n                    <div className={ isDisplayFrom ? 'col-xs-4 col-sm-4 col-md-4 col-lg-4' : '' }>\n                    <TaskForm\n                    />\n                    </div>\n                    <div className= {isDisplayFrom ? 'col-xs-8 col-sm-8 col-md-8 col-lg-8' : 'col-xs-12 col-sm-12 col-md-12 col-lg-12' }>\n                        <button\n                        type=\"button\"\n                        className=\"btn btn-primary\"\n                        onClick={this.onToggleForm} >\n                            <span className=\"fa fa-plus mr-5\"></span>\n                            Thêm Công Việc\n                        </button>\n                        <button\n                        type=\"button\"\n                        className=\"btn btn-danger ml-5\"\n                        onClick={this.onGenerateData}>\n                            <span className=\"fa fa-plus mr-5\"></span>\n                            Generate Data\n                        </button>\n\n                        <TaskControl\n                        onSreach   = {this.onSreach}\n                        onSort     = {this.onSort}\n                        sortBy     = {sortBy}\n                        sortValue  = {sortValue}\n                         />\n\n\n                        <TaskList\n                        // onUpdate = { this.onUpdate }\n                        onFilter = { this.onFilter } />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        isDisplayFrom : state.isDisplayForm,\n        itemEditting : state.itemEditting\n    };\n}\n\nconst mapDispatchToProps = (dispatch, props) =>{\n    return {\n        onToggleForm : () => {\n            dispatch(actions.toggleForm());\n        },\n        onClearTask : (task) =>{\n            dispatch(actions.editTask(task));\n        },\n        onOpenForm : () => {\n            dispatch(actions.openForm());\n        }\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);"]},"metadata":{},"sourceType":"module"}